{"version":3,"sources":["redux/actions.js","components/list/list.js","components/form/form.js","components/add-button/add-button.js","App.js","serviceWorker.js","redux/reducer.js","index.js"],"names":["ActionTypes","HANDLE_TITLE_INPUT_CHANGE","HANDLE_DETAIL_INPUT_CHANGE","HANDLE_ADD_ITEM","HANDLE_REMOVE_ITEM","HANDLE_EDIT_ITEM","HANDLE_COMPLETE","HANDLE_INCOMPLETE","HANDLE_CLICK","List","page1","this","props","state","initialReducer","className","elementType","map","list","title","details","detail","sublist","subitem","React","Component","ItemForm","handleSubmit","onSubmit","htmlFor","Field","name","component","type","reduxForm","form","AddButton","App","connect","dispatch","handleTitleInputChange","event","payload","handleClick","Boolean","window","location","hostname","match","INITIAL_STATE","completedList","inputTitleValue","inputDetailValue","action","rootReducer","combineReducers","formReducer","store","createStore","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.46a4e5ed.chunk.js","sourcesContent":["//action types\nexport const ActionTypes = {\n    HANDLE_TITLE_INPUT_CHANGE: \"HANDLE_TITLE_INPUT_CHANGE\",\n    HANDLE_DETAIL_INPUT_CHANGE: \"HANDLE_DETAIL_INPUT_CHANGE\",\n    HANDLE_ADD_ITEM: \"HANDLE_ADD_ITEM\",\n    HANDLE_REMOVE_ITEM: \"HANDLE_REMOVE_ITEM\",\n    HANDLE_EDIT_ITEM: \"HANDLE_EDIT_ITEM\",\n    HANDLE_COMPLETE: \"HANDLE_COMPLETE\",\n    HANDLE_INCOMPLETE: \"HANDLE_INCOMPLETE\",\n    HANDLE_CLICK: \"HANDLE_CLICK\",\n}\nexport default ActionTypes;\n\n//action creators\nexport const handleTitleInputChange = (payload) => ({\n    type: ActionTypes.HANDLE_TITLE_INPUT_CHANGE,\n    payload\n})\n\nexport const handleDetailInputChange = (payload) => ({\n    type: ActionTypes.HANDLE_DETAIL_INPUT_CHANGE,\n    payload\n})\n\nexport const handleAddItem = (payload) => ({\n    type: ActionTypes.HANDLE_ADD_ITEM,\n    payload\n})\n\nexport const handleRemoveItem = (payload) => ({\n    type: ActionTypes.HANDLE_REMOVE_ITEM,\n    payload\n})\n\nexport const handleEditItem = (payload) => ({\n    type: ActionTypes.HANDLE_EDIT_ITEM,\n    payload\n})\n\nexport const handleCompleted = (payload) => ({\n    type: ActionTypes.HANDLE_COMPLETE,\n    payload\n})\n\nexport const handleIncomplete = (payload) => ({\n    type: ActionTypes.HANDLE_INCOMPLETE,\n    payload\n})\n\nexport const handleClick = (payload) => ({\n    type: ActionTypes.HANDLE_CLICK,\n    payload\n})","import React from 'react';\nimport ListItem from '../list-item/list-item.js'\nimport Masonry from 'react-masonry-component'\n\nclass List extends React.Component{\n\nrender(){\nconst page1 = this.props.props.state.initialReducer.page1\n    return <div>\n                <Masonry className=\"list\" elementType={'ul'}>\n                          {page1.map(list => <div className=\"list-item shown\">\n                                    {list.title}_{list.details.map( detail => <>_{detail}</> )} |:|\n                                    {list.sublist.map( subitem => <div>=>{subitem.title}_{subitem.details.map(detail => <>_{detail}</> )} |:|</div> )}\n                                </div>\n                          )}\n                </Masonry>\n           </div>\n}\n}\n\n\n\nexport default List","import React from 'react';\nimport { Field, reduxForm } from 'redux-form';\n\nlet ItemForm = props => {\n    const { handleSubmit } = props\n    return <form onSubmit={handleSubmit}>\n        <div>\n            <label htmlFor=\"title\">new title</label>\n            <Field name=\"title\" component=\"input\" type=\"text\" />\n        </div>\n        <div>\n            <label htmlFor=\"detail\">new detail</label>\n            <Field name=\"detail\" component=\"input\" type=\"text\" />\n        </div>\n    </form>\n}\n\nItemForm = reduxForm({\n    form: 'item-form'\n})(ItemForm)\n\nexport default ItemForm","import React from 'react';\n\nlet AddButton = props => {\n    return <div>\n              <button className=\"button\">\n                add\n              </button>\n           </div>\n}\n\n\n\nexport default AddButton;","import React, { Component } from \"react\";\nimport {\n    handleTitleInputChange,\n    handleClick\n} from './redux/actions.js'\nimport { connect } from 'react-redux';\n\nimport List from './components/list/list.js'\nimport InfoForm from './components/form/form.js'\nimport AddButton from './components/add-button/add-button.js'\nimport \"./App.css\";\n\nclass App extends Component {\n\n  render() {\n   return (\n         <div className=\"App\">\n                 <div className=\"add-item\">\n                     <InfoForm/>\n                     <AddButton/>\n                 </div>\n           <div className=\"page\">\n                <List props={this.props}/>\n           </div>\n\n            <div className=\"box\">\n                <div className=\"grandparent\">\n                    <div className=\"title\">GP...</div>\n                        <div className=\"detail\">det</div>\n                        <div className=\"detail\">det</div>\n                        <div className=\"detail\">det</div>\n                    <br/>\n                    <br/>\n                    <div className=\"parent\">\n                        <div className=\"title\">P...</div>\n                            <div className=\"detail\">det</div>\n                            <div className=\"detail\">det</div>\n                            <div className=\"detail\">det</div>\n                        <br/>\n                        <br/>\n                        <div className=\"child\">\n                            <div className=\"title\">C...</div>\n                                <div className=\"detail\">det</div>\n                                <div className=\"detail\">det</div>\n                                <div className=\"detail\">det</div>\n                            <br/>\n                            <br/>\n\n                            <div className=\"grandchild\">\n                                <div className=\"title\">GC...</div>\n                                    <div className=\"detail\">det</div>\n                                    <div className=\"detail\">det</div>\n                                    <div className=\"detail\">det</div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"grandparent\">\n                    <div className=\"title\">GP...</div>\n                        <div className=\"detail\">det</div>\n                        <div className=\"detail\">det</div>\n                        <div className=\"detail\">det</div>\n                    <br/>\n                    <br/>\n                    <div className=\"parent\">\n                        <div className=\"title\">P...</div>\n                            <div className=\"detail\">det</div>\n                            <div className=\"detail\">det</div>\n                            <div className=\"detail\">det</div>\n                        <br/>\n                        <br/>\n                        <div className=\"child\">\n                            <div className=\"title\">C...</div>\n                                <div className=\"detail\">det</div>\n                                <div className=\"detail\">det</div>\n                                <div className=\"detail\">det</div>\n                            <br/>\n                            <br/>\n                            <div className=\"grandchild\">\n                                <div className=\"title\">GC...</div>\n                                    <div className=\"detail\">det</div>\n                                    <div className=\"detail\">det</div>\n                                    <div className=\"detail\">det</div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n         </div>\n       );\n  }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        state\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        handleTitleInputChange: (event)=>dispatch(handleTitleInputChange(event)),\n        handleClick: (event)=>dispatch(handleClick(event)),\n        dispatch\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import ActionTypes from './actions.js';\n//import './action-creator.js';\n\n//map page\n//map list\n//map sublist\nconst INITIAL_STATE = {\n    page1: [\n      {\n        title: \"title1\",\n        details: [\"1st\", \"2nd\", \"3rd\"],\n        sublist: [\n          {\n            title: \"subtitle1\",\n            details: [\"1st\", \"2nd\", \"3rd\"],\n          },\n          {\n            title: \"subtitle2\",\n            details: [\"1st\", \"2nd\", \"3rd\"],\n          },\n        ],\n      },\n      {\n          title: \"title1\",\n          details: [\"1st\", \"2nd\", \"3rd\"],\n          sublist: [\n            {\n              title: \"subtitle1\",\n              details: [\"1st\", \"2nd\", \"3rd\"],\n            },\n            {\n              title: \"subtitle2\",\n              details: [\"1st\", \"2nd\", \"3rd\"],\n            },\n\n            {\n              title: \"subtitle2\",\n              details: [\"1st\", \"2nd\", \"3rd\"],\n            },\n\n            {\n              title: \"subtitle2\",\n              details: [\"1st\", \"2nd\", \"3rd\"],\n            },\n          ],\n        },\n      {\n        title: \"title1\",\n        details: [\"1st\", \"2nd\", \"3rd\"],\n        sublist: [\n          {\n            title: \"subtitle1\",\n            details: [\"1st\", \"2nd\", \"3rd\"],\n          },\n          {\n            title: \"subtitle2\",\n            details: [\"1st\", \"2nd\", \"3rd\"],\n          },\n\n          {\n            title: \"subtitle2\",\n            details: [\"1st\", \"2nd\", \"3rd\"],\n          },\n        ],\n      },\n      {\n          title: \"title1\",\n          details: [\"1st\", \"2nd\", \"3rd\"],\n          sublist: [\n            {\n              title: \"subtitle1\",\n              details: [\"1st\", \"2nd\", \"3rd\"],\n            },\n            {\n              title: \"subtitle2\",\n              details: [\"1st\", \"2nd\", \"3rd\"],\n            },\n          ],\n        },\n      {\n        title: \"title1\",\n        details: [\"1st\", \"2nd\", \"3rd\"],\n        sublist: [\n          {\n            title: \"subtitle1\",\n            details: [\"1st\", \"2nd\", \"3rd\"],\n          },\n          {\n            title: \"subtitle2\",\n            details: [\"1st\", \"2nd\", \"3rd\"],\n          },\n        ],\n      },\n      {\n          title: \"title1\",\n          details: [\"1st\", \"2nd\", \"3rd\"],\n          sublist: [\n            {\n              title: \"subtitle1\",\n              details: [\"1st\", \"2nd\", \"3rd\"],\n            },\n            {\n              title: \"subtitle2\",\n              details: [\"1st\", \"2nd\", \"3rd\"],\n            },\n          ],\n        },\n    ],\n    completedList: [\"first completed item\"],\n    inputTitleValue: \"\",\n    inputDetailValue: \"\",\n}\n\nconst initialReducer = (state = INITIAL_STATE, action) => {\n    switch (action.type) {\n        case ActionTypes.HANDLE_TITLE_INPUT_CHANGE:\n                return {\n                    ...state,\n                    inputTitleValue: \"changed\"\n                }\n        case ActionTypes.HANDLE_CLICK:\n            return {\n                ...state,\n                inputTitleValue: \"clicked\"\n            }\n         default:\n            return state;\n    }\n\n};\n\nexport default initialReducer;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\n//redux/ reducer => store => provider\nimport { Provider } from 'react-redux';\nimport { createStore, combineReducers } from 'redux';\nimport { reducer as formReducer } from 'redux-form';\nimport initialReducer from './redux/reducer.js';\n\nconst rootReducer = combineReducers({\n    initialReducer,\n    form: formReducer\n})\n\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n       <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}